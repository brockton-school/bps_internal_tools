"""initial schema

Revision ID: 890451fb40f1
Revises: 
Create Date: 2025-08-09 22:55:55.919876

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '890451fb40f1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('course_id', sa.String(length=32), nullable=False),
    sa.Column('integration_id', sa.String(length=64), nullable=True),
    sa.Column('short_name', sa.String(length=255), nullable=True),
    sa.Column('long_name', sa.Text(), nullable=True),
    sa.Column('account_id', sa.String(length=64), nullable=True),
    sa.Column('term_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('start_date', sa.String(length=32), nullable=True),
    sa.Column('end_date', sa.String(length=32), nullable=True),
    sa.Column('course_format', sa.String(length=64), nullable=True),
    sa.Column('blueprint_course_id', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users_canvas',
    sa.Column('user_id', sa.String(length=64), nullable=False),
    sa.Column('integration_id', sa.String(length=64), nullable=True),
    sa.Column('authentication_provider_id', sa.String(length=64), nullable=True),
    sa.Column('login_id', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('sortable_name', sa.String(length=255), nullable=True),
    sa.Column('short_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('pronouns', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('enrollments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.String(length=64), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('section_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('associated_user_id', sa.String(length=64), nullable=True),
    sa.Column('limit_section_privileges', sa.String(length=16), nullable=True),
    sa.Column('temporary_enrollment_source_user_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users_canvas.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enrollments_course_id'), 'enrollments', ['course_id'], unique=False)
    op.create_index(op.f('ix_enrollments_role'), 'enrollments', ['role'], unique=False)
    op.create_index(op.f('ix_enrollments_user_id'), 'enrollments', ['user_id'], unique=False)
    op.create_table('role_tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('tool_slug', sa.String(length=128), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'tool_slug', name='uq_role_tool')
    )
    op.create_table('users_auth',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('role_name', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_name'], ['roles.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_auth')
    op.drop_table('role_tools')
    op.drop_index(op.f('ix_enrollments_user_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_role'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_course_id'), table_name='enrollments')
    op.drop_table('enrollments')
    op.drop_table('users_canvas')
    op.drop_table('roles')
    op.drop_table('courses')
    # ### end Alembic commands ###
